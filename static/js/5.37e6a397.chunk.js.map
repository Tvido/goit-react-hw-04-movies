{"version":3,"sources":["Components/MoviePreview/MoviePreview.js","Components/MovieList/MovieList.js","Components/SearchBar/SearchBar.js","views/SearchBarView.js"],"names":["MoviePreview","poster_path","title","className","src","alt","withRouter","movies","location","match","map","id","to","pathname","state","from","SearchBar","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","type","autoComplete","autoFocus","placeholder","onChange","Component","SearchView","movieQuery","imagesPage","onChangeQuery","prevProps","prevState","fetchMovies","a","axios","get","response","data","results","MovieList"],"mappings":"2LAaeA,EAXM,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAhB,OACnB,sBAAKC,UAAU,GAAf,UACE,qBAAKA,UAAU,GAAf,SACE,qBAAKC,IAAKH,EAAaE,UAAU,sBAAsBE,IAAKH,MAE9D,qBAAKC,UAAU,GAAf,SACE,oBAAIA,UAAU,GAAd,SAAkBD,W,gHCqBTI,eAvBG,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAeC,GAAe,EAAtBC,MAAsB,EAAfD,UAClC,OACE,oBAAIL,UAAU,YAAd,SACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIV,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,oBAAaC,UAAU,kBAAvB,SACE,cAAC,IAAD,CACES,GAAI,CAAEC,SAAS,UAAD,OAAYF,GAAMG,MAAO,CAAEC,KAAMP,IAC/CL,UAAU,GAFZ,SAOE,cAACH,EAAA,EAAD,CACEC,YAAW,yCAAoCA,GAC/CC,MAAOA,OAVJS,Y,kHC8CFK,E,4MAhDbF,MAAQ,CACNG,MAAO,I,EAGTC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,MAAOE,EAAME,cAAcC,S,EAG7CC,aAAe,SAAAJ,GACbA,EAAMK,iBAMN,EAAKC,MAAMC,SAAS,EAAKZ,MAAMG,OAC/B,EAAKU,S,EAGPA,MAAQ,WACN,EAAKP,SAAS,CAAEH,MAAO,M,4CAGzB,WACE,IAAQA,EAAUW,KAAKd,MAAfG,MAER,OACE,wBAAQd,UAAU,YAAlB,SACE,uBAAMuB,SAAUE,KAAKL,aAAcpB,UAAU,aAA7C,UACE,wBAAQ0B,KAAK,SAAS1B,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACV0B,KAAK,OACLP,MAAOL,EACPa,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUL,KAAKV,wB,GA7CHgB,a,yBCGlBC,E,4MACJrB,MAAQ,CACNP,OAAQ,GACR6B,WAAY,GACZC,WAAY,G,EASdC,cAAgB,SAAArB,GACd,EAAKG,SAAS,CACZgB,WAAYnB,K,wDARhB,SAAmBsB,EAAWC,GACxBA,EAAUJ,aAAeR,KAAKd,MAAMsB,YACtCR,KAAKa,gB,gEAUT,8BAAAC,EAAA,4DACkB,mCACRN,EAAeR,KAAKd,MAApBsB,WAFV,SAIyBO,IAAMC,IAAN,6DAHP,mCAGO,4DAC4FR,IALrH,OAIQS,EAJR,OAOEjB,KAAKR,SAAS,CAAEb,OAAQsC,EAASC,KAAKC,UAPxC,gD,0EAUA,WACE,OACE,qCACE,cAAC,EAAD,CAAWrB,SAAUE,KAAKU,gBAE1B,oBAAInC,UAAU,GAAd,SACE,cAAC6C,EAAA,EAAD,CAAWzC,OAAQqB,KAAKd,MAAMP,kB,GAnCf2B,aA0CVC","file":"static/js/5.37e6a397.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MoviePreview = ({ poster_path, title }) => (\r\n  <div className=\"\">\r\n    <div className=\"\">\r\n      <img src={poster_path} className=\"MovieList--item-img\" alt={title} />\r\n    </div>\r\n    <div className=\"\">\r\n      <h5 className=\"\">{title}</h5>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MoviePreview;\r\n","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport MoviePreview from '../MoviePreview';\r\n\r\nimport '../../App.css';\r\n\r\nconst MovieList = ({ movies, match, location }) => {\r\n  return (\r\n    <ul className=\"MovieList\">\r\n      {movies.map(({ id, poster_path, title }) => (\r\n        <li key={id} className=\"MovieList--item\">\r\n          <NavLink\r\n            to={{ pathname: `movies/${id}`, state: { from: location } }}\r\n            className=\"\"\r\n          >\r\n            {/* <NavLink to={`${match.url}/${id}`} className=\"\"> */}\r\n            {/* <img src={movie.poster_path} alt={title} className=\"\" />\r\n            {movie.title} */}\r\n            <MoviePreview\r\n              poster_path={`https://image.tmdb.org/t/p/w300${poster_path}`}\r\n              title={title}\r\n            />\r\n          </NavLink>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieList);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBar extends Component {\r\n  static propTypes = {\r\n    inputValue: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ query: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    // if (this.state.inputValue.trim() === '') {\r\n    //   return;\r\n    // }\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={query}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\nimport SearchBar from '../Components/SearchBar';\r\nimport MovieList from '../Components/MovieList';\r\n\r\nimport axios from 'axios';\r\n\r\nclass SearchView extends Component {\r\n  state = {\r\n    movies: [],\r\n    movieQuery: '',\r\n    imagesPage: 1,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.movieQuery !== this.state.movieQuery) {\r\n      this.fetchMovies();\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      movieQuery: query,\r\n    });\r\n  };\r\n\r\n  async fetchMovies() {\r\n    const API_KEY = '822df93417c2789fa5aa8e4d6553456b';\r\n    const { movieQuery } = this.state;\r\n\r\n    const response = await axios.get(\r\n      ` https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${movieQuery}`,\r\n    );\r\n    this.setState({ movies: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchBar onSubmit={this.onChangeQuery} />\r\n\r\n        <ul className=\"\">\r\n          <MovieList movies={this.state.movies} />\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchView;\r\n"],"sourceRoot":""}